#include <arpa/inet.h>
#include <libgen.h>
#include <netinet/in.h>
#include <stdio.h> /* These are the usual header files */
#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <unistd.h>
//#include "Linklist.h"
#define MAXBUFFER 1024

void splitMessage(char buffer[]){
  int len = strlen(buffer);
  char name[20];
  char pass[20];
  char mess[20];
  char *p;
  char *h;
  int i,j = 0,k;
  p = strtok(buffer,",");
  strcpy(mess,p);
  while(p != NULL){
    p =strtok(NULL,",");
    if(p!=NULL){
      strcpy(name,p);
      
      if(p!= NULL){
	p = strtok(NULL,"\n");
	strcpy(pass,p);
      }  
    }
    }
  int len0, len1,len2;
  len0 = strlen(mess);
  len1 = strlen(name);
  len2 = strlen(pass);
  printf("%s:%d %s:%d %s:%d",mess,len0,name,len1,pass,len2);
}

int main()
{
    int sockfd, newsockfd, portno = 5500;
    socklen_t clilen;
    int rec_client,send_client;
    char buffer[MAXBUFFER];
    char newbuffer[MAXBUFFER];
    int n;

    struct sockaddr_in serv_addr, cli_addr;
    /*
    FILE *fp;
    char name[20];
    char pass[20];
    int status;
    struct node *ptr;
    if((fp = fopen("data/account.txt","r")) == NULL){
      printf("khong mo duoc file \n");
      return 1;
    }
    while( fscanf(fp,"%s %s %d ",name,pass,&status) != EOF){
	  insertFirst(name,pass,status);
	}
    fclose(fp);
    */
    

    sockfd = socket(AF_INET, SOCK_STREAM, 0);

    if (sockfd < 0) 
     error("ERROR opening socket");

    bzero((char *) &serv_addr, sizeof(serv_addr));
   

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = inet_addr("127.0.0.1");
    serv_addr.sin_port = htons(portno);

    if (bind(sockfd, (struct sockaddr *) &serv_addr,sizeof(serv_addr)) < 0) 
          error("ERROR on binding");

    listen(sockfd,5);
    clilen = sizeof(cli_addr);
    newsockfd = accept(sockfd,(struct sockaddr *) &cli_addr,&clilen);

    if (newsockfd < 0) 
          error("ERROR on accept");
    while (1)
    {   
        bzero(buffer,1024);
	rec_client = recv(newsockfd,buffer,MAXBUFFER-1,0);
	if(rec_client <= 0){
	  printf("loi connect \n ");
	  break;
	}
       printf("Here is the message: %s\n",buffer);
       splitMessage(buffer);
       strcpy(buffer,"login-success\n");
	 int len = strlen(buffer);
       send_client = send(newsockfd,buffer,len,0);
       if(send_client < 0){
	 printf("loi send client\n");
       }
       //  printf("da send cho clien : %s \n",buffer);
     
 }  
     close(newsockfd);
     close(sockfd);
     return 0;
}
